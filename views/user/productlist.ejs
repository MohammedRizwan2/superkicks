<%- include('../partials/header') %>

<!-- ░░ FEATURED PRODUCT DISPLAY ░░ -->
<% if (featuredProduct) { 
     const hero = featuredProduct;  %>
  <section class="relative overflow-hidden bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900">
    <!-- Animated Background Elements -->
    <div class="absolute inset-0 overflow-hidden">
      <div class="absolute -top-40 -right-40 w-80 h-80 bg-purple-500 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-pulse"></div>
      <div class="absolute -bottom-40 -left-40 w-80 h-80 bg-blue-500 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-pulse" style="animation-delay: 1s;"></div>
      <div class="absolute top-40 left-1/2 w-60 h-60 bg-pink-500 rounded-full mix-blend-multiply filter blur-xl opacity-50 animate-pulse" style="animation-delay: 2s;"></div>
    </div>

    <!-- Overlay for better text readability -->
    <div class="absolute inset-0 bg-black/30"></div>

    <!-- Main Content -->
    <div class="relative z-10 max-w-7xl mx-auto grid md:grid-cols-2 gap-16 px-6 py-24">
      
      <!-- Left Content with Glass Morphism -->
      <div data-gsap="fade-right" class="space-y-8">
        <!-- Badge -->
        <div class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 text-white/90">
          <i class="fa-solid fa-star text-yellow-400"></i>
          <span class="text-sm font-semibold uppercase tracking-wide">Featured Product</span>
        </div>

        <!-- Product Name with Gradient -->
        <h3 class="text-4xl lg:text-5xl font-bold leading-tight">
          <span class="bg-gradient-to-r from-white via-gray-100 to-white bg-clip-text text-transparent">
            <%= hero.productName %>
          </span>
        </h3>

        <!-- Brand with Icon -->
        <div class="flex items-center gap-3">
          <div class="w-8 h-8 rounded-full bg-gradient-to-r from-purple-500 to-pink-500 flex items-center justify-center">
            <i class="fa-solid fa-award text-white text-sm"></i>
          </div>
          <p class="text-xl text-white/80 font-medium">Brand: <span class="text-white"><%= hero.brand %></span></p>
        </div>

        <!-- Price Section with Enhanced Styling -->
        <div class="space-y-3">
          <div class="flex items-baseline gap-4">
            <span class="text-4xl lg:text-5xl font-black bg-gradient-to-r from-green-400 to-emerald-500 bg-clip-text text-transparent">
              ₹<%= (typeof hero.lowestSalePrice === 'number' ? hero.lowestSalePrice : hero.lowestPrice || 0).toFixed(2) %>
            </span>
            <% if (hero.bestOffer && typeof hero.lowestPrice === 'number') { %>
              <span class="text-2xl line-through text-white/40 font-semibold">
                ₹<%= hero.lowestPrice.toFixed(2) %>
              </span>
            <% } %>
          </div>
          
          <% if (hero.bestOffer && typeof hero.lowestPrice === 'number' && typeof hero.lowestSalePrice === 'number') { %>
            <!-- Animated Offer Badge -->
            <div class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-gradient-to-r from-red-500 to-pink-600 shadow-lg animate-pulse">
              <i class="fa-solid fa-fire text-white"></i>
              <span class="text-white font-bold text-sm uppercase tracking-wider">
                <%= hero.bestOffer %>% OFF - Limited Time!
              </span>
            </div>
            
            <!-- Savings Display -->
            <p class="text-green-300 text-lg font-semibold">
              <i class="fa-solid fa-piggy-bank mr-2"></i>
              You save ₹<%= Math.max(0, hero.lowestPrice - hero.lowestSalePrice).toFixed(2) %>
            </p>
          <% } %>
        </div>

        <!-- CTA Button with Hover Effects -->
        <div class="pt-4">
          <a href="/user/products/<%= hero._id %>" 
             class="group relative inline-flex items-center gap-3 px-8 py-4 rounded-full bg-gradient-to-r from-white to-gray-100 text-gray-900 font-bold text-lg transition-all duration-300 hover:scale-105 hover:shadow-2xl overflow-hidden">
            <div class="absolute inset-0 bg-gradient-to-r from-purple-600 to-pink-600 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
            <div class="relative z-10 flex items-center gap-3 group-hover:text-white transition-colors duration-300">
              <i class="fa-solid fa-eye"></i>
              <span>View Details</span>
              <i class="fa-solid fa-arrow-right group-hover:translate-x-1 transition-transform duration-300"></i>
            </div>
          </a>
        </div>

        <!-- Additional Info Cards -->
        <div class="grid grid-cols-2 gap-4 pt-6">
          <div class="p-4 rounded-lg bg-white/10 backdrop-blur-sm border border-white/20">
            <div class="flex items-center gap-2 mb-2">
              <i class="fa-solid fa-truck text-green-400"></i>
              <span class="text-white/90 font-semibold text-sm">Free Shipping</span>
            </div>
            <p class="text-white/60 text-xs">On orders above ₹999</p>
          </div>
          
          <div class="p-4 rounded-lg bg-white/10 backdrop-blur-sm border border-white/20">
            <div class="flex items-center gap-2 mb-2">
              <i class="fa-solid fa-shield-check text-blue-400"></i>
              <span class="text-white/90 font-semibold text-sm">Authentic</span>
            </div>
            <p class="text-white/60 text-xs">100% Genuine product</p>
          </div>
        </div>
      </div>

      <!-- Right Side - Product Image with 3D Effects -->
      <div data-gsap="fade-left" class="relative">
        <!-- Glowing Background Circle -->
        <div class="absolute inset-0 bg-gradient-to-r from-purple-500/20 to-pink-500/20 rounded-full blur-3xl scale-110"></div>
        
        <!-- Image Container with Glass Effect -->
        <div class="relative p-8 rounded-2xl bg-white/5 backdrop-blur-sm border border-white/10 shadow-2xl">
          <!-- Floating Elements -->
          <div class="absolute -top-4 -right-4 w-8 h-8 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full animate-bounce opacity-80"></div>
          <div class="absolute -bottom-6 -left-6 w-6 h-6 bg-gradient-to-r from-green-400 to-blue-500 rounded-full animate-bounce opacity-60" style="animation-delay: 0.5s;"></div>
          
          <!-- Product Image -->
          <img src="<%=getImageUrl(hero.images[0]) %>" 
               alt="<%= hero.productName %>" 
               class="w-full max-w-lg mx-auto drop-shadow-2xl transform hover:scale-105 transition-transform duration-500 filter brightness-110">
          
          <!-- Reflection Effect -->
          <div class="absolute bottom-0 left-8 right-8 h-32 bg-gradient-to-t from-white/10 to-transparent rounded-b-2xl blur-sm opacity-30"></div>
        </div>

        <!-- Floating Stats -->
        <div class="absolute -bottom-8 left-1/2 transform -translate-x-1/2 flex gap-4">
          <div class="px-4 py-2 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 text-center">
            <div class="text-white font-bold">4.8★</div>
            <div class="text-white/60 text-xs">Rating</div>
          </div>
          <div class="px-4 py-2 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 text-center">
            <div class="text-white font-bold">2.5K+</div>
            <div class="text-white/60 text-xs">Reviews</div>
          </div>
        </div>
      </div>
    </div>

    <!-- Bottom Wave Effect -->
    <div class="absolute bottom-0 left-0 right-0">
      <svg viewBox="0 0 1440 120" class="w-full h-16 text-white fill-current" aria-hidden="true" focusable="false">
        <path d="M0,96L80,85.3C160,75,320,53,480,58.7C640,64,800,96,960,96C1120,96,1280,64,1360,48L1440,32L1440,120L1360,120C1280,120,1120,120,960,120C800,120,640,120,480,120C320,120,160,120,80,120L0,120Z"></path>
      </svg>
    </div>
  </section>
<% } %>

<main class="bg-white min-h-screen">
  
  <!-- Main Container -->
  <div class="max-w-7xl mx-auto px-6 py-8">
    
    <!-- Page Header -->
    <div class="mb-8">
      <h1 class="text-4xl font-bold text-black mb-3">All Products</h1>
      <p class="text-gray-600 text-lg">Discover our complete collection</p>
    </div>

    <!-- Search & Filter Section -->
    <div class="bg-gray-50 rounded-2xl p-6 mb-10 shadow-sm border border-gray-200">
      
      <!-- Search Bar -->
      <div class="mb-6">
        <h3 class="text-lg font-semibold text-black mb-3">Search Products</h3>
        <form id="searchForm" class="relative">
          <div class="flex items-center">
            <div class="relative flex-1">
              <i class="fa-solid fa-search absolute left-4 top-1/2 -translate-y-1/2 text-gray-400"></i>
              <input 
                type="text" 
                name="q" 
                id="q"
                placeholder="Search for products..."
                value="<%= typeof q !== 'undefined' ? q : '' %>"
                class="w-full pl-12 pr-12 py-4 rounded-xl border border-gray-300 focus:outline-none focus:ring-2 focus:ring-black focus:border-black bg-white text-black placeholder-gray-400 text-base transition"
              />
              <button 
                type="button" 
                id="clearSearchBtn"
                class="absolute right-4 top-1/2 -translate-y-1/2 w-6 h-6 bg-gray-200 hover:bg-gray-300 rounded-full flex items-center justify-center text-gray-500 hover:text-black transition"
                aria-label="Clear search only"
              >
                <i class="fa-solid fa-xmark text-sm"></i>
              </button>
            </div>
            <button 
              type="button"
              onclick="performSearch()"
              class="ml-4 bg-black hover:bg-gray-800 text-white px-8 py-4 rounded-xl font-semibold transition"
            >
              Search
            </button>
          </div>
        </form>
      </div>

      <!-- Filters -->
      <div>
        <h3 class="text-lg font-semibold text-black mb-3">Filter Products</h3>
        <form id="filterForm">
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4 mb-6">
            
            <!-- Category -->
            <div>
              <label for="category" class="block text-sm font-medium text-gray-700 mb-2">Category</label>
              <select 
                name="category" 
                id="category"
                class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-black focus:border-black bg-white text-black"
              >
                <option value="">All Categories</option>
                <% categories.forEach(cat => { %>
                  <option value="<%= cat._id %>" <%= category === cat._id.toString() ? 'selected' : '' %>>
                    <%= cat.name %>
                  </option>
                <% }) %>
              </select>
            </div>

            <!-- Min Price -->
            <div>
              <label for="priceMin" class="block text-sm font-medium text-gray-700 mb-2">Min Price (₹)</label>
              <input 
                type="number" 
                name="priceMin" 
                id="priceMin"
                placeholder="0"
                value="<%= typeof priceMin !== 'undefined' ? priceMin : '' %>"
                class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-black focus:border-black bg-white text-black"
              />
            </div>

            <!-- Max Price -->
            <div>
              <label for="priceMax" class="block text-sm font-medium text-gray-700 mb-2">Max Price (₹)</label>
              <input 
                type="number" 
                name="priceMax" 
                id="priceMax"
                placeholder="Any"
                value="<%= typeof priceMax !== 'undefined' ? priceMax : '' %>"
                class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-black focus:border-black bg-white text-black"
              />
            </div>

            <!-- Sort -->
            <div>
              <label for="sort" class="block text-sm font-medium text-gray-700 mb-2">Sort By</label>
              <select 
                name="sort" 
                id="sort"
                class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-black focus:border-black bg-white text-black"
              >
                <option value="">Default</option>
                <option value="priceAsc" <%= sort === 'priceAsc' ? 'selected' : '' %>>Price: Low to High</option>
                <option value="priceDesc" <%= sort === 'priceDesc' ? 'selected' : '' %>>Price: High to Low</option>
                <option value="nameAsc" <%= sort === 'nameAsc' ? 'selected' : '' %>>Name: A to Z</option>
                <option value="nameDesc" <%= sort === 'nameDesc' ? 'selected' : '' %>>Name: Z to A</option>
                <option value="newest" <%= sort === 'newest' ? 'selected' : '' %>>New Arrivals</option>
              </select>
            </div>

            <!-- Filter Actions -->
            <div class="flex flex-col justify-end">
              <div class="flex gap-3">
                <button 
                  type="button" 
                  id="clearFilterBtn"
                  class="flex-1 bg-white border-2 border-black text-black px-4 py-3 rounded-lg font-semibold hover:bg-black hover:text-white transition"
                >
                  Clear
                </button>
                <button 
                  type="button" 
                  onclick="applyFilters(1)"
                  class="flex-1 bg-black text-white px-4 py-3 rounded-lg font-semibold hover:bg-gray-800 transition"
                >
                  Filter
                </button>
              </div>
            </div>

          </div>
        </form>
      </div>

    </div>

    <!-- Products Grid -->
    <div id="productsContainer" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
      <% if (!products || products.length === 0) { %>
        <div class="col-span-full text-center py-16">
          <div class="text-gray-400 mb-4">
            <i class="fa-solid fa-box-open text-6xl"></i>
          </div>
          <p class="text-xl text-gray-600">No products found matching your criteria.</p>
        </div>
      <% } else { %>
        <% products.forEach(product => { %>
          <a href="/user/products/<%= product._id %>" class="group block">
            <div class="bg-white border-2 border-gray-200 rounded-xl overflow-hidden hover:border-black hover:shadow-lg transition-all duration-300">
              
              <!-- Product Image -->
              <div class="aspect-square bg-gray-100 overflow-hidden">
                <img 
                  src="<%= getImageUrl(product.images[0]) %>"
                  alt="<%= product.productName %>"
                  class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                />
              </div>
              
              <!-- Product Info -->
              <div class="p-5">
                <h3 class="font-bold text-lg text-black mb-1 line-clamp-2"><%= product.productName %></h3>
                <p class="text-sm text-gray-500 uppercase tracking-wider mb-3"><%= product.brand %></p>
                
                <!-- Pricing -->
                <% if (product.bestOffer > 0) { %>
                  <div class="flex items-center gap-3 flex-wrap">
                    <span class="text-2xl font-bold text-black">₹<%= product.lowestSalePrice?.toFixed(2) || 'N/A' %></span>
                    <span class="text-lg line-through text-gray-400">₹<%= product.lowestPrice?.toFixed(2) || 'N/A' %></span>
                    <span class="bg-black text-white px-3 py-1 rounded-full text-xs font-bold">
                      <%= product.bestOffer %>% OFF
                    </span>
                  </div>
                <% } else { %>
                  <span class="text-2xl font-bold text-black">₹<%= product.lowestPrice?.toFixed(2) || 'N/A' %></span>
                <% } %>
              </div>

            </div>
          </a>
        <% }) %>
      <% } %>
    </div>

    <!-- Pagination -->
    <div id="paginationContainer" class="mt-12 flex justify-center items-center gap-4">
      <% if (prevPageUrl) { %>
        <a href="#" data-page="<%= currentPage - 1 %>" class="page-link px-6 py-3 bg-white border-2 border-black text-black rounded-lg hover:bg-black hover:text-white transition font-semibold">
          <i class="fa-solid fa-arrow-left mr-2"></i>Previous
        </a>
      <% } %>
      
      <div class="px-6 py-3 bg-black text-white rounded-lg font-bold">
        Page <%= currentPage %> of <%= totalPages %>
      </div>
      
      <% if (nextPageUrl) { %>
        <a href="#" data-page="<%= currentPage + 1 %>" class="page-link px-6 py-3 bg-white border-2 border-black text-black rounded-lg hover:bg-black hover:text-white transition font-semibold">
          Next<i class="fa-solid fa-arrow-right ml-2"></i>
        </a>
      <% } %>
    </div>

  </div>
</main>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
  // Search clear button - ONLY clears search, preserves all filters using AJAX
  document.getElementById('clearSearchBtn').addEventListener('click', function() {
    document.getElementById('q').value = '';
    // Use AJAX instead of page refresh to preserve filters
    applyFilters(1, false, true); // page=1, clearFilters=false, clearSearch=true
  });

  // Filter clear button - ONLY clears filters, preserves search
  document.getElementById('clearFilterBtn').addEventListener('click', function() {
    // Reset only filter form fields
    document.getElementById('category').value = '';
    document.getElementById('priceMin').value = '';
    document.getElementById('priceMax').value = '';
    document.getElementById('sort').value = '';
    
    // Apply filters with cleared values but keep search term
    applyFilters(1, true, false); // page=1, clearFilters=true, clearSearch=false
  });

  // Perform search function - keeps filters intact using AJAX
  function performSearch() {
    applyFilters(1, false, false); // Use AJAX instead of page refresh
  }

  // Page navigation
  document.addEventListener('click', function(e) {
    if (e.target.classList.contains('page-link') || e.target.closest('.page-link')) {
      e.preventDefault();
      const link = e.target.classList.contains('page-link') ? e.target : e.target.closest('.page-link');
      const page = link.getAttribute('data-page');
      applyFilters(parseInt(page), false, false);
    }
  });

  // Apply filters function - updated to handle search clearing
  async function applyFilters(page = 1, clearFilters = false, clearSearch = false) {
    try {
      // Show loading state
      document.getElementById('productsContainer').innerHTML = `
        <div class="col-span-full text-center py-16">
          <div class="animate-spin rounded-full h-12 w-12 border-4 border-black border-t-transparent mx-auto mb-4"></div>
          <p class="text-gray-600">Loading products...</p>
        </div>
      `;

      // Build parameters
      let params = new URLSearchParams();
      params.set('page', page);

      // Handle search parameter
      if (!clearSearch) {
        const searchValue = document.getElementById('q').value.trim();
        if (searchValue) {
          params.set('q', searchValue);
        }
      }

      // Add filter parameters if not clearing
      if (!clearFilters) {
        const category = document.getElementById('category').value;
        const priceMin = document.getElementById('priceMin').value;
        const priceMax = document.getElementById('priceMax').value;
        const sort = document.getElementById('sort').value;

        if (category) params.set('category', category);
        if (priceMin) params.set('priceMin', priceMin);
        if (priceMax) params.set('priceMax', priceMax);
        if (sort) params.set('sort', sort);
      }

      // Fetch filtered products
      const response = await axios.get(`/user/product/list?${params.toString()}`);
      const { products, totalPages, currentPage } = response.data;

      // Render products
      if (!products || products.length === 0) {
        document.getElementById('productsContainer').innerHTML = `
          <div class="col-span-full text-center py-16">
            <div class="text-gray-400 mb-4">
              <i class="fa-solid fa-box-open text-6xl"></i>
            </div>
            <p class="text-xl text-gray-600">No products found matching your criteria.</p>
          </div>
        `;
      } else {
        document.getElementById('productsContainer').innerHTML = products.map(product => `
          <a href="/user/products/${product._id}" class="group block">
            <div class="bg-white border-2 border-gray-200 rounded-xl overflow-hidden hover:border-black hover:shadow-lg transition-all duration-300">
              <div class="aspect-square bg-gray-100 overflow-hidden">
                <img src="${product.images?.[0] || '/assets/placeholder.jpg'}" alt="${product.productName}"
                     class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300" />
              </div>
              <div class="p-5">
                <h3 class="font-bold text-lg text-black mb-1 line-clamp-2">${product.productName}</h3>
                <p class="text-sm text-gray-500 uppercase tracking-wider mb-3">${product.brand}</p>
                ${product.bestOffer > 0 ? `
                  <div class="flex items-center gap-3 flex-wrap">
                    <span class="text-2xl font-bold text-black">₹${product.lowestSalePrice?.toFixed(2) || 'N/A'}</span>
                    <span class="text-lg line-through text-gray-400">₹${product.lowestPrice?.toFixed(2) || 'N/A'}</span>
                    <span class="bg-black text-white px-3 py-1 rounded-full text-xs font-bold">${product.bestOffer}% OFF</span>
                  </div>
                ` : `
                  <span class="text-2xl font-bold text-black">₹${product.lowestPrice?.toFixed(2) || 'N/A'}</span>
                `}
              </div>
            </div>
          </a>
        `).join('');
      }

      // Update pagination
      updatePagination(currentPage, totalPages);
      
      // Update URL
      window.history.pushState({}, '', `/user/product/list?${params.toString()}`);

    } catch (error) {
      console.error('Error applying filters:', error);
      document.getElementById('productsContainer').innerHTML = `
        <div class="col-span-full text-center py-16">
          <div class="text-red-500 mb-4">
            <i class="fa-solid fa-exclamation-triangle text-6xl"></i>
          </div>
          <p class="text-xl text-red-600">Error loading products. Please try again.</p>
        </div>
      `;
    }
  }

  function updatePagination(currentPage, totalPages) {
    const prevBtn = currentPage > 1 ? 
      `<a href="#" data-page="${currentPage - 1}" class="page-link px-6 py-3 bg-white border-2 border-black text-black rounded-lg hover:bg-black hover:text-white transition font-semibold">
        <i class="fa-solid fa-arrow-left mr-2"></i>Previous
       </a>` : '';
    
    const nextBtn = currentPage < totalPages ? 
      `<a href="#" data-page="${currentPage + 1}" class="page-link px-6 py-3 bg-white border-2 border-black text-black rounded-lg hover:bg-black hover:text-white transition font-semibold">
        Next<i class="fa-solid fa-arrow-right ml-2"></i>
       </a>` : '';
    
    document.getElementById('paginationContainer').innerHTML = `
      ${prevBtn}
      <div class="px-6 py-3 bg-black text-white rounded-lg font-bold">
        Page ${currentPage} of ${totalPages}
      </div>
      ${nextBtn}
    `;
  }

  // GSAP animations for featured product
  document.addEventListener('DOMContentLoaded', () => {
    if (typeof gsap !== 'undefined') {
      gsap.from('[data-gsap="fade-right"]', {
        x: -50,
        opacity: 0,
        duration: 1,
        ease: 'power3.out'
      });
      
      gsap.from('[data-gsap="fade-left"]', {
        x: 50,
        opacity: 0,
        duration: 1,
        ease: 'power3.out',
        delay: 0.2
      });
    }
  });
</script>

</body>
</html>
