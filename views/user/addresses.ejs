<%- include('../partials/header') %>

<script src="https://cdn.tailwindcss.com"></script>
<script>
  tailwind.config = {
    theme: {
      extend: {
        colors: {
          ash: '#f8f8f8',
          graphite: '#e5e5e5'
        }
      }
    }
  }
</script>

<main class="max-w-7xl mx-auto px-4 lg:px-6 py-8 bg-white min-h-screen">
    <div class="flex gap-8 flex-col md:flex-row">
        <!-- Sidebar -->
        <aside class="w-full md:w-64 shrink-0">
            <div class="bg-ash/40 rounded-xl border border-black/10 p-6 shadow-sm">
                <!-- User card -->
                <div class="bg-black text-white rounded-lg p-4 mb-6">
                    <div class="flex items-center gap-3">
                        <div class="w-12 h-12 rounded-full overflow-hidden bg-white border-2 border-white/20">
                            <img src="<%= user.avatarUrl || '/img/default-avatar.jpg'%>" 
                                 alt="Avatar" 
                                 class="w-full h-full object-cover">
                        </div>
                        <div>
                            <p class="font-semibold"><%= user.fullName || user.name %></p>
                            <p class="text-white/70 text-xs"> Member</p>
                        </div>
                    </div>
                </div>

                <!-- Nav -->
                <nav class="space-y-2">
                    <a href="/user/profile" 
                       class="flex items-center gap-3 px-4 py-3 rounded-lg text-black/70 hover:bg-black/5 hover:text-black transition">
                        <i class="fas fa-user w-5"></i><span>Account Overview</span>
                    </a>
                    <a href="/user/orders" 
                       class="flex items-center gap-3 px-4 py-3 rounded-lg text-black/70 hover:bg-black/5 hover:text-black transition">
                        <i class="fas fa-bag-shopping w-5"></i><span>My Orders</span>
                    </a>
                    <a href="/user/addresses" 
                       class="flex items-center gap-3 px-4 py-3 rounded-lg bg-black text-white font-medium transition">
                        <i class="fas fa-map-marker-alt w-5"></i><span>Manage Addresses</span>
                    </a>
                    <a href="/user/wishlist" 
                       class="flex items-center gap-3 px-4 py-3 rounded-lg text-black/70 hover:bg-black/5 hover:text-black transition">
                        <i class="far fa-heart w-5"></i><span>Wishlist</span>
                    </a>
                    <a href="/user/cart" 
                       class="flex items-center gap-3 px-4 py-3 rounded-lg text-black/70 hover:bg-black/5 hover:text-black transition">
                        <i class="fas fa-shopping-cart w-5"></i><span>Cart</span>
                    </a>
                    <a href="/user/wallet" 
                       class="flex items-center gap-3 px-4 py-3 rounded-lg text-black/70 hover:bg-black/5 hover:text-black transition">
                        <i class="fas fa-wallet w-5"></i><span>Wallet</span>
                    </a>
                   
                    <a href="/user/logout" 
                       class="flex items-center gap-3 px-4 py-3 rounded-lg text-red-600 hover:bg-red-50 transition">
                        <i class="fas fa-right-from-bracket w-5"></i><span>Logout</span>
                    </a>
                </nav>
            </div>
        </aside>

        <!-- Main Content -->
        <section class="flex-1 space-y-8">
            <!-- Header -->
            <div class="flex items-center justify-between flex-col sm:flex-row gap-4">
                <div>
                    <h1 class="text-2xl md:text-3xl font-bold text-black">Manage Addresses</h1>
                    <p class="text-black/60">Add, edit, or delete your delivery addresses</p>
                </div>
                <button id="addAddressBtn" 
                        class="inline-flex items-center gap-2 bg-black text-white px-5 py-2.5 rounded-lg hover:bg-black/90 transition font-medium">
                    <i class="fas fa-plus"></i><span>Add Address</span>
                  
                        
                </button>
            </div>

            <!-- Addresses List -->
            <div class="bg-ash/40 rounded-xl border border-black/10 p-6 shadow-sm">
                <% if (!addresses || addresses.length === 0) { %>
                    <!-- Empty State -->
                    <div class="text-center py-12">
                        <div class="w-20 h-20 bg-black/5 rounded-full flex items-center justify-center mx-auto mb-4">
                            <i class="fas fa-map-marker-alt text-3xl text-black/40"></i>
                        </div>
                        <h3 class="text-lg font-semibold text-black mb-2">No addresses found</h3>
                        <p class="text-black/60 mb-6">Add your first address to get started with deliveries</p>
                        <button id="addAddressBtnEmpty" 
                                class="bg-black text-white px-6 py-3 rounded-lg hover:bg-black/90 transition font-medium">
                            <i class="fas fa-plus mr-2"></i>Add Your First Address
                        </button>
                    </div>
                <% } else { %>
                    <!-- Addresses Grid -->
                    <div class="grid md:grid-cols-2 gap-6" id="addressesGrid">
                        <% addresses.forEach(address => { %>
                            <div class="address-card border border-black/10 rounded-lg p-6 hover:border-black/20 transition-all duration-300 bg-white/60" 
                                 data-address-id="<%= address.id %>">
                                <!-- Address Header -->
                                <div class="flex items-center justify-between mb-4">
                                    <div class="flex items-center gap-2">
                                        <div class="w-8 h-8 bg-black/10 rounded-lg flex items-center justify-center">
                                            <i class="fas fa-<%= address.type === 'home' ? 'home' : address.type === 'work' ? 'building' : 'map-marker-alt' %> text-black/60 text-sm"></i>
                                        </div>
                                        <h3 class="font-semibold text-black capitalize"><%= address.type %></h3>
                                        <% if (address.isDefault) { %>
                                            <span class="text-xs bg-black text-white px-2 py-1 rounded-full">DEFAULT</span>
                                        <% } %>
                                    </div>
                                    
                                    <!-- Actions Dropdown -->
                                    <div class="relative">
                                        <button class="p-2 hover:bg-black/5 rounded-lg transition-colors address-actions-btn">
                                            <i class="fas fa-ellipsis-v text-black/60"></i>
                                        </button>
                                        <div class="absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-black/20 hidden z-10 address-actions-dropdown">
                                            <button data-action="edit" 
                                                    class="w-full flex items-center gap-2 px-4 py-2 text-sm text-black/70 hover:bg-black/5 rounded-t-lg transition">
                                                <i class="fas fa-edit text-black/60"></i>Edit
                                            </button>
                                            <button data-action="delete" 
                                                    class="w-full flex items-center gap-2 px-4 py-2 text-sm text-red-600 hover:bg-red-50 rounded-b-lg transition">
                                                <i class="fas fa-trash text-red-600"></i>Delete
                                            </button>
                                        </div>
                                    </div>
                                </div>

                                <!-- Address Details -->
                                <div class="space-y-2">
                                    <p class="font-medium text-black"><%= address.name %></p>
                                    <p class="text-sm text-black/70"><%= address.address %></p>
                                    <% if (address.landmark) { %>
                                        <p class="text-sm text-black/60">Near <%= address.landmark %></p>
                                    <% } %>
                                    <p class="text-sm text-black/70"><%= address.state %>, <%= address.country %> - <%= address.pinCode %></p>
                                    <div class="flex items-center gap-4 pt-2 mt-3 border-t border-black/10">
                                        <span class="text-sm text-black/60 flex items-center gap-1">
                                            <i class="fas fa-phone text-xs"></i><%= address.phone %>
                                        </span>
                                        <span class="text-sm text-black/60 flex items-center gap-1">
                                            <i class="fas fa-envelope text-xs"></i><%= address.email %>
                                        </span>
                                        <% if (address.alternatePhone) { %>
                                            <span class="text-sm text-black/60 flex items-center gap-1">
                                                <i class="fas fa-phone-alt text-xs"></i><%= address.alternatePhone %>
                                            </span>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                <% } %>
            </div>
        </section>
    </div>
</main>

<!-- Footer -->
<footer class="bg-black text-white mt-16">
    <div class="max-w-7xl mx-auto px-6 py-10 grid sm:grid-cols-2 lg:grid-cols-4 gap-6 text-sm">
        <div class="flex items-center gap-3">
            <i class="fas fa-shipping-fast text-2xl text-white"></i>
            <div><p class="font-semibold">Express Shipping</p><p class="text-white/70">Ships in 24 hours</p></div>
        </div>
        <div class="flex items-center gap-3">
            <i class="fas fa-location-dot text-2xl text-white"></i>
            <div><p class="font-semibold">Shipping Tracking</p><p class="text-white/70">Track your orders</p></div>
        </div>
        <div class="flex items-center gap-3">
            <i class="fas fa-shield-halved text-2xl text-white"></i>
            <div><p class="font-semibold">Buy Safely</p><p class="text-white/70">Secure checkout</p></div>
        </div>
        <div class="flex items-center gap-3">
            <i class="fab fa-cc-visa text-2xl text-white/80"></i>
            <i class="fab fa-cc-mastercard text-2xl text-white/80"></i>
            <i class="fab fa-paypal text-2xl text-white/80"></i>
        </div>
    </div>
</footer>

<!-- Add/Edit Address Modal -->
<div id="addressModal" class="fixed inset-0 z-50 hidden items-center justify-center p-4">
    <div class="absolute inset-0 bg-black/50 backdrop-blur-sm"></div>
    <div class="bg-white rounded-2xl shadow-2xl max-w-2xl w-full relative z-10 max-h-[90vh] overflow-y-auto">
        <!-- Modal Header -->
        <div class="sticky top-0 bg-white border-b border-black/10 px-6 py-4 rounded-t-2xl">
            <div class="flex items-center justify-between">
                <div class="flex items-center gap-3">
                    <div class="w-10 h-10 bg-black/10 rounded-lg flex items-center justify-center">
                        <i class="fas fa-map-marker-alt text-black/60"></i>
                    </div>
                    <div>
                        <h2 id="modalTitle" class="text-xl font-bold text-black">Add New Address</h2>
                        <p class="text-sm text-black/60">Fill in the details for your address</p>
                    </div>
                </div>
                <button id="closeModal" class="p-2 hover:bg-black/5 rounded-lg transition-colors">
                    <i class="fas fa-times text-black/60"></i>
                </button>
            </div>
        </div>

        <!-- Modal Body -->
        <div class="p-6">
            <!-- Messages -->
            <div id="messageContainer" class="mb-6 hidden">
                <div id="successMessage" class="hidden p-4 bg-green-50 border border-green-200 rounded-xl text-green-800 flex items-center gap-2">
                    <i class="fas fa-check-circle"></i>
                    <span id="successText"></span>
                </div>
                <div id="errorMessage" class="hidden p-4 bg-red-50 border border-red-200 rounded-xl text-red-800 flex items-center gap-2">
                    <i class="fas fa-exclamation-circle"></i>
                    <span id="errorText"></span>
                </div>
            </div>

            <!-- Form -->
            <form id="addressForm" class="space-y-6">
                <input type="hidden" id="addressId" name="id" value="">
                
                <!-- Personal Information -->
                <div class="space-y-4">
                    <h3 class="font-semibold text-black border-b border-black/10 pb-2 flex items-center gap-2">
                        <i class="fas fa-user text-black/70 text-sm"></i>
                        Personal Information
                    </h3>
                    
                    <div class="grid md:grid-cols-2 gap-4">
                        <!-- Full Name -->
                        <div>
                            <label for="name" class="block text-sm font-medium text-black/70 mb-1">Full Name *</label>
                            <input type="text" id="name" name="name" required
                                    class="w-full px-4 py-3 bg-ash/30 rounded-lg border border-black/20 focus:border-black/50 focus:bg-white focus:outline-none transition-colors"
                                    placeholder="Enter your full name">
                            <span class="error-message text-red-600 text-sm hidden" data-field="name"></span>
                        </div>

                        <!-- Email -->
                        <div>
                            <label for="email" class="block text-sm font-medium text-black/70 mb-1">Email Address *</label>
                            <input type="email" id="email" name="email" required
                                    class="w-full px-4 py-3 bg-ash/30 rounded-lg border border-black/20 focus:border-black/50 focus:bg-white focus:outline-none transition-colors"
                                    placeholder="Enter your email">
                            <span class="error-message text-red-600 text-sm hidden" data-field="email"></span>
                        </div>

                        <!-- Phone -->
                        <div>
                            <label for="phone" class="block text-sm font-medium text-black/70 mb-1">Phone Number *</label>
                            <input type="tel" id="phone" name="phone" required
                                    class="w-full px-4 py-3 bg-ash/30 rounded-lg border border-black/20 focus:border-black/50 focus:bg-white focus:outline-none transition-colors"
                                    placeholder="Enter your phone number">
                            <span class="error-message text-red-600 text-sm hidden" data-field="phone"></span>
                        </div>

                        <!-- Alternate Phone -->
                        <div>
                            <label for="alternatePhone" class="block text-sm font-medium text-black/70 mb-1">Alternate Phone</label>
                            <input type="tel" id="alternatePhone" name="alternatePhone"
                                    class="w-full px-4 py-3 bg-ash/30 rounded-lg border border-black/20 focus:border-black/50 focus:bg-white focus:outline-none transition-colors"
                                    placeholder="Alternate phone (optional)">
                            <span class="error-message text-red-600 text-sm hidden" data-field="alternatePhone"></span>
                        </div>
                    </div>
                </div>

                <!-- Address Information -->
                <div class="space-y-4">
                    <h3 class="font-semibold text-black border-b border-black/10 pb-2 flex items-center gap-2">
                        <i class="fas fa-home text-black/70 text-sm"></i>
                        Address Details
                    </h3>
                    
                    <div class="grid md:grid-cols-2 gap-4">
                        <!-- Country -->
                        <div>
                            <label for="country" class="block text-sm font-medium text-black/70 mb-1">Country *</label>
                            <select id="country" name="country" required
                                    class="w-full px-4 py-3 bg-ash/30 rounded-lg border border-black/20 focus:border-black/50 focus:bg-white focus:outline-none transition-colors">
                                <option value="">Select Country</option>
                                <option value="USA">United States</option>
                                <option value="India">India</option>
                                <option value="UK">United Kingdom</option>
                                <option value="Canada">Canada</option>
                                <option value="Australia">Australia</option>
                            </select>
                            <span class="error-message text-red-600 text-sm hidden" data-field="country"></span>
                        </div>

                        <!-- State -->
                        <div>
                            <label for="state" class="block text-sm font-medium text-black/70 mb-1">State *</label>
                            <input type="text" id="state" name="state" required
                                    class="w-full px-4 py-3 bg-ash/30 rounded-lg border border-black/20 focus:border-black/50 focus:bg-white focus:outline-none transition-colors"
                                    placeholder="Enter your state">
                            <span class="error-message text-red-600 text-sm hidden" data-field="state"></span>
                        </div>

                        <!-- PIN Code -->
                        <div>
                            <label for="pinCode" class="block text-sm font-medium text-black/70 mb-1">ZIP Code *</label>
                            <input type="text" id="pinCode" name="pinCode" required pattern="[0-9]{5,6}"
                                    class="w-full px-4 py-3 bg-ash/30 rounded-lg border border-black/20 focus:border-black/50 focus:bg-white focus:outline-none transition-colors"
                                    placeholder="Enter ZIP code">
                            <span class="error-message text-red-600 text-sm hidden" data-field="pinCode"></span>
                        </div>

                        <!-- Address Type -->
                        <div>
                            <label for="type" class="block text-sm font-medium text-black/70 mb-1">Address Type *</label>
                            <select id="type" name="type" required
                                    class="w-full px-4 py-3 bg-ash/30 rounded-lg border border-black/20 focus:border-black/50 focus:bg-white focus:outline-none transition-colors">
                                <option value="">Select Type</option>
                                <option value="home">Home</option>
                                <option value="work">Work</option>
                                <option value="other">Other</option>
                            </select>
                            <span class="error-message text-red-600 text-sm hidden" data-field="type"></span>
                        </div>
                    </div>

                    <!-- Full Address -->
                    <div>
                        <label for="address" class="block text-sm font-medium text-black/70 mb-1">Full Address *</label>
                        <textarea id="address" name="address" required rows="3"
                                class="w-full px-4 py-3 bg-ash/30 rounded-lg border border-black/20 focus:border-black/50 focus:bg-white focus:outline-none transition-colors resize-none"
                                placeholder="House/Flat no, Building name, Street, Area"></textarea>
                        <span class="error-message text-red-600 text-sm hidden" data-field="address"></span>
                    </div>

                    <!-- Landmark -->
                    <div>
                        <label for="landmark" class="block text-sm font-medium text-black/70 mb-1">Landmark</label>
                        <input type="text" id="landmark" name="landmark"
                                class="w-full px-4 py-3 bg-ash/30 rounded-lg border border-black/20 focus:border-black/50 focus:bg-white focus:outline-none transition-colors"
                                placeholder="Nearby landmark (optional)">
                        <span class="error-message text-red-600 text-sm hidden" data-field="landmark"></span>
                    </div>
                </div>
            </form>
        </div>

        <!-- Modal Footer -->
        <div class="sticky bottom-0 bg-ash/30 border-t border-black/10 px-6 py-4 rounded-b-2xl">
            <div class="flex gap-3">
                <button type="button" id="cancelBtn" 
                        class="px-6 py-3 bg-white text-black border border-black/20 rounded-lg hover:bg-black/5 transition-colors">
                    Cancel
                </button>
                <button type="button" id="submitBtn"
                        class="flex-1 bg-black text-white px-6 py-3 rounded-lg hover:bg-black/90 transition-colors font-medium">
                    <span id="submitBtnText">Add Address</span>
                    <span id="submitBtnLoading" class="hidden flex items-center gap-2">
                        <i class="fas fa-spinner fa-spin"></i>
                        Processing...
                    </span>
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="fixed inset-0 z-50 hidden items-center justify-center p-4">
    <div class="absolute inset-0 bg-black/50 backdrop-blur-sm"></div>
    <div class="bg-white rounded-2xl shadow-2xl max-w-md w-full relative z-10">
        <div class="p-6">
            <div class="flex justify-center mb-4">
                <div class="w-16 h-16 rounded-full bg-red-100 flex items-center justify-center">
                    <i class="fas fa-exclamation-triangle text-red-600 text-2xl"></i>
                </div>
            </div>
            <h3 class="text-xl font-bold text-black text-center mb-2">Delete Address?</h3>
            <p class="text-black/60 text-center mb-6">Are you sure you want to delete this address? This action cannot be undone.</p>
            
            <div class="flex gap-3">
                <button type="button" id="cancelDeleteBtn" 
                        class="flex-1 px-6 py-3 bg-white text-black border border-black/20 rounded-lg hover:bg-black/5 transition-colors">
                    Cancel
                </button>
                <button type="button" id="confirmDeleteBtn"
                        class="flex-1 bg-red-600 text-white px-6 py-3 rounded-lg hover:bg-red-700 transition-colors font-medium">
                    Delete
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // DOM Elements
        const addAddressBtn = document.getElementById('addAddressBtn');
        const addAddressBtnEmpty = document.getElementById('addAddressBtnEmpty');
        const addressModal = document.getElementById('addressModal');
        const deleteModal = document.getElementById('deleteModal');
        const closeModalBtn = document.getElementById('closeModal');
        const cancelBtn = document.getElementById('cancelBtn');
        const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');
        const submitBtn = document.getElementById('submitBtn');
        const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
        const addressForm = document.getElementById('addressForm');
        const modalTitle = document.getElementById('modalTitle');
        const submitBtnText = document.getElementById('submitBtnText');
        const submitBtnLoading = document.getElementById('submitBtnLoading');
        const addressIdInput = document.getElementById('addressId');
        
        // Current address being edited/deleted
        let currentAddressId = null;
        
        // Open address modal for adding
        if (addAddressBtn) {
            addAddressBtn.addEventListener('click', openAddAddressModal);
        }
        if (addAddressBtnEmpty) {
            addAddressBtnEmpty.addEventListener('click', openAddAddressModal);
        }
        
        // Close modals
        closeModalBtn.addEventListener('click', closeAddressModal);
        cancelBtn.addEventListener('click', closeAddressModal);
        cancelDeleteBtn.addEventListener('click', closeDeleteModal);
        
        // Address actions (edit/delete)
        document.querySelectorAll('.address-actions-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                // Hide any other open dropdowns
                document.querySelectorAll('.address-actions-dropdown').forEach(dropdown => {
                    if (dropdown !== this.nextElementSibling) {
                        dropdown.classList.add('hidden');
                    }
                });
                
                // Toggle current dropdown
                const dropdown = this.nextElementSibling;
                dropdown.classList.toggle('hidden');
            });
        });
        
        // Edit address
        document.querySelectorAll('[data-action="edit"]').forEach(btn => {
            btn.addEventListener('click', function() {
                const addressCard = this.closest('.address-card');
                const addressId = addressCard.dataset.addressId;
                editAddress(addressId);
            });
        });
        
        // Delete address
        document.querySelectorAll('[data-action="delete"]').forEach(btn => {
            btn.addEventListener('click', function() {
                const addressCard = this.closest('.address-card');
                const addressId = addressCard.dataset.addressId;
                openDeleteModal(addressId);
            });
        });
        
        // Submit address form
        submitBtn.addEventListener('click', submitAddressForm);
        
        // Confirm delete
        confirmDeleteBtn.addEventListener('click', deleteAddress);
        
        // Close modals when clicking outside
        [addressModal, deleteModal].forEach(modal => {
            modal.addEventListener('click', function(e) {
                if (e.target === this) {
                    if (this === addressModal) closeAddressModal();
                    if (this === deleteModal) closeDeleteModal();
                }
            });
        });
        
        // Functions
        function openAddAddressModal() {
            resetForm();
            hideMessages();
            modalTitle.textContent = 'Add New Address';
            submitBtnText.textContent = 'Add Address';
            currentAddressId = null;
            addressModal.classList.remove('hidden');
            addressModal.classList.add('flex');
            document.body.style.overflow = 'hidden';
            document.getElementById('name').focus();
        }
        
        function closeAddressModal() {
            addressModal.classList.add('hidden');
            addressModal.classList.remove('flex');
            document.body.style.overflow = '';
            hideDropdowns();
        }
        
        function openDeleteModal(addressId) {
            currentAddressId = addressId;
            deleteModal.classList.remove('hidden');
            deleteModal.classList.add('flex');
            document.body.style.overflow = 'hidden';
            hideDropdowns();
        }
        
        function closeDeleteModal() {
            deleteModal.classList.add('hidden');
            deleteModal.classList.remove('flex');
            document.body.style.overflow = '';
        }
        
        function hideDropdowns() {
            document.querySelectorAll('.address-actions-dropdown').forEach(dropdown => {
                dropdown.classList.add('hidden');
            });
        }
        
        function editAddress(addressId) {
            // Fetch address data from server
            fetch(`/user/api/address/${addressId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const address = data.data;
                        resetForm();
                        hideMessages();
                        
                        // Populate form
                        modalTitle.textContent = 'Edit Address';
                        submitBtnText.textContent = 'Update Address';
                        addressIdInput.value = address.id;
                        document.getElementById('name').value = address.name;
                        document.getElementById('email').value = address.email;
                        document.getElementById('phone').value = address.phone;
                        document.getElementById('alternatePhone').value = address.alternatePhone || '';
                        document.getElementById('country').value = address.country;
                        document.getElementById('state').value = address.state;
                        document.getElementById('pinCode').value = address.pinCode;
                        document.getElementById('type').value = address.type;
                        document.getElementById('address').value = address.address;
                        document.getElementById('landmark').value = address.landmark || '';
                        
                        currentAddressId = addressId;
                        addressModal.classList.remove('hidden');
                        addressModal.classList.add('flex');
                        document.body.style.overflow = 'hidden';
                    } else {
                        showMessage('error', data.error.message || 'Failed to fetch address');
                    }
                })
                .catch(error => {
                    console.error('Error fetching address:', error);
                    showMessage('error', 'Failed to fetch address details');
                });
        }
        
        function submitAddressForm() {
            // Get form data
            const formData = {
                name: document.getElementById('name').value,
                email: document.getElementById('email').value,
                phone: document.getElementById('phone').value,
                alternatePhone: document.getElementById('alternatePhone').value,
                country: document.getElementById('country').value,
                state: document.getElementById('state').value,
                address: document.getElementById('address').value,
                landmark: document.getElementById('landmark').value,
                pinCode: document.getElementById('pinCode').value,
                type: document.getElementById('type').value
            };
            
            // Add ID if editing
            if (addressIdInput.value) {
                formData.id = addressIdInput.value;
            }
            
            // Show loading state
            submitBtn.disabled = true;
            submitBtnText.classList.add('hidden');
            submitBtnLoading.classList.remove('hidden');
            
            // Determine endpoint and method
            const url = addressIdInput.value ? 
                `/user/api/address/${addressIdInput.value}` : 
                '/user/api/address';
            
            const method = addressIdInput.value ? 'PUT' : 'POST';
            
            // Send request
            fetch(url, {
                method: method,
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showMessage('success', data.message || 'Address saved successfully!');
                    // Reload page after delay
                    setTimeout(() => {
                        window.location.reload();
                    }, 1500);
                } else {
                    // Handle validation errors
                    if (data.error && data.error.errors) {
                        showFormErrors(data.error.errors);
                        showMessage('error', data.error.message || 'Please fix the errors below');
                    } else {
                        showMessage('error', data.error?.message || 'Failed to save address');
                    }
                }
            })
            .catch(error => {
                console.error('Address submission error:', error);
                showMessage('error', 'Network error. Please try again.');
            })
            .finally(() => {
                // Reset button state
                submitBtn.disabled = false;
                submitBtnText.classList.remove('hidden');
                submitBtnLoading.classList.add('hidden');
            });
        }
        
        function deleteAddress() {
            if (!currentAddressId) return;
            
            // Show loading state
            confirmDeleteBtn.disabled = true;
            confirmDeleteBtn.textContent = 'Deleting...';
            
            fetch(`/user/api/address/${currentAddressId}`, {
                method: 'DELETE'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Reload page after delay
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    showMessage('error', data.error?.message || 'Failed to delete address');
                }
            })
            .catch(error => {
                console.error('Delete error:', error);
                showMessage('error', 'Network error. Please try again.');
            })
            .finally(() => {
                // Reset button state
                confirmDeleteBtn.disabled = false;
                confirmDeleteBtn.textContent = 'Delete';
            });
        }
        
        function showFormErrors(errors) {
            // Clear previous errors
            document.querySelectorAll('.error-message').forEach(el => {
                el.textContent = '';
                el.classList.add('hidden');
            });
            
            document.querySelectorAll('input, select, textarea').forEach(el => {
                el.classList.remove('border-red-500');
                el.classList.add('border-black/20');
            });
            
            // Show new errors
            for (const field in errors) {
                const errorElement = document.querySelector(`.error-message[data-field="${field}"]`);
                const inputElement = document.getElementById(field);
                
                if (errorElement && inputElement) {
                    errorElement.textContent = errors[field];
                    errorElement.classList.remove('hidden');
                    inputElement.classList.add('border-red-500');
                    inputElement.classList.remove('border-black/20');
                }
            }
        }
        
        function showMessage(type, text) {
            const messageContainer = document.getElementById('messageContainer');
            const successMessage = document.getElementById('successMessage');
            const errorMessage = document.getElementById('errorMessage');
            const successText = document.getElementById('successText');
            const errorText = document.getElementById('errorText');
            
            messageContainer.classList.remove('hidden');
            
            if (type === 'success') {
                successText.textContent = text;
                successMessage.classList.remove('hidden');
                errorMessage.classList.add('hidden');
            } else {
                errorText.textContent = text;
                errorMessage.classList.remove('hidden');
                successMessage.classList.add('hidden');
            }
        }
        
        function hideMessages() {
            document.getElementById('messageContainer').classList.add('hidden');
            document.getElementById('successMessage').classList.add('hidden');
            document.getElementById('errorMessage').classList.add('hidden');
        }
        
        function resetForm() {
            addressForm.reset();
            addressIdInput.value = '';
            document.querySelectorAll('.error-message').forEach(el => {
                el.textContent = '';
                el.classList.add('hidden');
            });
            document.querySelectorAll('input, select, textarea').forEach(el => {
                el.classList.remove('border-red-500');
                el.classList.add('border-black/20');
            });
            hideMessages();
        }
    });
</script>
</body>
</html>
